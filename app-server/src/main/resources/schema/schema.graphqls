scalar Long
scalar Settings

type Query {
    user(username: String): User
    users: [User!]!
    availableUserSettings: Settings!
}

type Mutation {
    createUser(request: CreateUserRequest!): User
    createPost(request: CreatePostRequest!): Post
    createDataExtension(request: CreateDataExtensionRequest!): ExtraData
}

input CreateUserRequest {
    username: String!
    settings: Settings
}

input CreatePostRequest {
    userId: Long!
    content: String!
}

input CreateDataExtensionRequest {
    entityId: Long!
    entityType: EntityType!
    propertyName: String!
    propertyValue: String
}

type User {
    id: Long!
    username: String!
    settings: Settings
    posts: [Post!]
}

type Post {
    id: Long!
    userId: Long
    content: String!
}

type ExtraData {
    id: ID!
    entityId: Long!
    entityType: String!
    propertyName: String!
    propertyValue: String
}

enum EntityType {
    User
    Post
}

extend type User {
    extraData(names: [String!]! = []): [ExtraData]
}

extend type Post {
    extraData(names: [String!]! = []): [ExtraData]
}
