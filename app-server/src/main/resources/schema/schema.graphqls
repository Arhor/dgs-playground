scalar Long
scalar Settings

type Query {
    user(username: String): UserDto
    users: [UserDto!]!
}

type Mutation {
    createUser(request: CreateUserRequest!): UserDto
    createPost(request: CreatePostRequest!): PostDto
    createPostExtension(request: CreatePostExtensionRequest!): PostExtensionDto
}

input CreateUserRequest {
    username: String!
    settings: Settings
}

input CreatePostRequest {
    userId: Long!
    content: String!
}

input CreatePostExtensionRequest {
    postId: Long!
    additionalContent: String!
}

type UserDto {
    id: Long!
    username: String!
    settings: Settings
    posts: [PostDto!]
}

type PostDto {
    id: Long!
    userId: Long
    content: String!
}

type PostExtensionDto {
    id: Long!
    postId: Long
    additionalContent: String!
}

# consider 'PostDto' as a type out of our control
extend type PostDto {
    postExtensions: [PostExtensionDto]
}
