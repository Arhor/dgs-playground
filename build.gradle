plugins {
    id "com.adarshr.test-logger"
    id "org.jetbrains.kotlin.jvm"
    id "org.jetbrains.kotlin.kapt"
    id "org.jetbrains.kotlin.plugin.spring"
    id "org.springframework.boot"
    id "io.spring.dependency-management"
}


wrapper {
    gradleVersion = project.property("app.version.gradle")
}

java {
    sourceCompatibility = project.property("app.version.java")
    targetCompatibility = project.property("app.version.java")
}

repositories {
    mavenCentral()
}

configurations {
    implementation {
        exclude module: "spring-boot-starter-tomcat"
    }
    testImplementation {
        exclude module: "junit-vintage-engine"
    }
}

dependencies {
    kapt "org.springframework:spring-context-indexer"
    kapt "org.springframework.boot:spring-boot-configuration-processor"

    runtimeOnly "org.postgresql:postgresql"

    developmentOnly "org.springframework.boot:spring-boot-devtools"

    implementation "com.fasterxml.jackson.module:jackson-module-kotlin"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.flywaydb:flyway-core"
    implementation "org.springframework.boot:spring-boot-starter-data-jdbc"
    implementation "org.springframework.boot:spring-boot-starter-undertow"
    implementation "org.springframework.boot:spring-boot-starter-web"

    testImplementation "io.mockk:mockk:${project.property('app.version.mokk')}"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.testcontainers:junit-jupiter"
    testImplementation "org.testcontainers:postgresql"
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:${property("app.version.testcontainers")}"
    }
}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.compilerArgs = [
        "-Xlint:unchecked",
        "-Xlint:deprecation",
        "-Xlint:preview",
        "-parameters"
    ]
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
    kotlinOptions {
        freeCompilerArgs = [
            "-Xjsr305=strict",
            "-Xjvm-default=all",
        ]
        jvmTarget = project.property("app.version.java")
        javaParameters = true
    }
}
